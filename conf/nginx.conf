
# 指定运行nginx的用户或用户组，默认为 nobody（Windows 上不生效）
# user nobody; # administrator administrators;

# 设置工作进程数，通常设置为等于 CPU 核心数的倍数
worker_processes 2;

# 全局错误日志定义类型，[debug | info | notice | warn | error | crit]
error_log logs/error.log;
error_log logs/error.log notice;
error_log logs/error.log info;

# 指定 Nginx 进程的 PID 文件存放位置
pid logs/nginx.pid;

# Nginx 事件模块配置（与网络连接有关）
events {
    # 指定事件模型 [ kqueue | rtsig | epoll | /dev/poll | select | poll | eventport ]
    # use epoll;

    # 设置一个进程是否可以同时接受多个新连接，（设为 on 可以提高性能）
    multi_accept on;

    # 设置网络连接序列化（用于防止多个进程同时接受到新连接的情况，这种情况称为“惊群”）
    # [什么是惊群](https://docs.pingcode.com/ask/65968.html)
    accept_mutex on;

    # 设置单个 worker 工作进程的最大连接数
    worker_connections 1024;
}

http {
    # 引入其他配置文件包（此处引入 ./mime.types，含有文件扩展名与 MIME 类型的映射，用于设置 HTTP 请求头和响应头。）
    include mime.types;

    # 默认的 MIME 类型（如果在 mime.types 中找不到对应类型，则会使用此处设置的类型）
    default_type application/octet-stream;

    # 定义日志格式
    log_format format '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # 指定访问日志的存放路径和使用的格式（log_format 中定义的 format）
    access_log logs/access.log format;

    # 开启高效的文件传输模式，调用系统内核的 sendfile() 函数
    sendfile on;

    # 限制每次调用 sendfile() 传输的数据量（1.21.4 之后默认为 2m）
    sendfile_max_chunk 1m;

    # 禁用 Nagle 算法，减少静态资源等待时间（仅在使用 sendfile 时才能启用）
    # [tcp_nopush 的作用](https://juejin.cn/s/nginx%20tcp_nopush%20%E4%BD%9C%E7%94%A8)
    tcp_nopush on;

    # 设置连接的保持时间
    keepalive_timeout 65;

    # 开启gzip
    gzip on;

    # 对静态文件进行提前压缩（解决 Gzip 与 sendfile 共存问题）
    gzip_static on;

    # 需要压缩的类型
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;

    # 设置 Gzip 压缩的程度，压缩级别越高，压缩比例越高，耗时也会相应变长，范围是1-9（9最高）
    gzip_comp_level 2;

    # 告诉代理服务器使用 gzip 压缩之后，要添加 Vary: Accept-Encoding 头信息
    gzip_vary off;

    # 处理请求压缩的缓冲区数量和大小。
    gzip_buffers 16 8K;

    # 作为反向代理时启用，指定对哪些服务器返回的结果进行 gzip 压缩
    # 匹配的前提是后端服务器必须要返回包含 "Via" 的 header 头。
    # [off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any]
    # 例：gzip_proxied no-cache; 如果 header 头中包含 "Cache-Control: no-cache" 头信息，则压缩此结果
    gzip_proxied any;

    # 低于 10kb 的资源不压缩
    gzip_min_length 10k;

    # 配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_disable "MSIE [1-6]\.";

    server {
        listen 80;
        server_name gpop.sdo.com;
        charset koi8-r;
        access_log logs/host.access.log format;
        proxy_set_header Host $host;
        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Nginx-Proxy true;
            proxy_pass http://127.0.0.1:8009;
            proxy_redirect off;
            # 允许跨域的源（$http_origin 动态获取请求客户端请求的域，不用 * 的原因是带 cookie 的请求不支持 * 号）
            add_header Access-Control-Allow-Origin 'http://127.0.0.1:8009';
            # add_header Access-Control-Allow-Origin *;

            # 表示请求头的字段 动态获取
            add_header Access-Control-Allow-Headers $http_access_control_request_headers;

            # 指定允许跨域的方法，* 代表所有
            # add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            add_header Access-Control-Allow-Methods *;
            # 预检命令的缓存，如果不缓存每次会发送两次请求
            add_header Access-Control-Max-Age 7200;
            # CORS 预检请求不能包含凭据。预检请求的响应必须指定 true 来表明可以携带凭据进行实际的请求。
            add_header Access-Control-Allow-Credentials true;
        }

        location /appManager {
            proxy_pass http://10.246.183.10;
        }
        location /game {
            proxy_pass http://10.246.183.10;
        }
        location /gpop3 {
            proxy_pass http://10.246.183.10;
        }

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }

        # # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        # location ~ \.php$ {
        #     proxy_pass http://127.0.0.1;
        # }

        # # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        # location ~ \.php$ {
        #     root html;
        #     fastcgi_pass 127.0.0.1:9000;
        #     fastcgi_index index.php;
        #     fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;
        #     include fastcgi_params;
        # }
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        # location ~ /\.ht {
        #     deny all;
        # }
    }

    # 本地打包部署测试
    # server {
    # 配置完 server_name, 记得配置 host, 然后访问 http://server_name:listen
    # server_name hahaha.com;
    # listen 8080;
    # proxy_set_header Host $host;
    # charset koi8-r;
    # access_log logs/host.access.log format;

    # # 打包部署
    # location / {
    #     root html/dist;
    #     index index.html index.htm;
    #     try_files $uri $uri/ @router;
    # }
    # location @router {
    #     rewrite ^.*$ /index.html last;
    # }
    # 后端反向代理
    # location /ls/ {
    #     proxy_pass http://qu-live-api.u.sdo.com;
    #     # proxy_set_header Host $host;
    #     proxy_set_header Cookie $http_cookie;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_redirect default;
    #     add_header Access-Control-Allow-Origin *;
    #     add_header Access-Control-Allow-Headers X-Requested-With;
    #     add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    # }
    #     error_page 500 502 503 504 /50x.html;
    #     location = /50x.html {
    #         root html;
    #     }
    # }
    #
    # another virtual host using mix of IP-, name-, and port-based configuration
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    #
    # HTTPS server
    # server {
    # listen 443 http2 ssl;
    # server_name testboxsupport.2211.com.cn;
    # server_name abroad-sin-wlogin-gray.shengqugames-corp.com;
    # server_name gpop.sdo.com;
    # ssl_certificate D:/ssl/server.crt;
    # ssl_certificate_key D:/ssl/server.key;
    # ssl_session_cache shared:SSL:1m;
    # ssl_session_timeout 5m;
    # location / {
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Nginx-Proxy true;
    #     proxy_pass https://127.0.0.1:8080;
    #     proxy_redirect off;
    # }
    # }
}